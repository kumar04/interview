package com.array.duplicate;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

class FindDuplicate {
	void printRepeating(int arr[], int size) {
		int i;
		System.out.println("The repeating elements are : ");

		for (i = 0; i < size; i++) {
			if (arr[Math.abs(arr[i])] >= 0)
				arr[Math.abs(arr[i])] = -arr[Math.abs(arr[i])];
			else
				System.out.print(Math.abs(arr[i]) + " ");
		}
	}

	// Driver program
	public static void main(String[] args) {
		FindDuplicate duplicate = new FindDuplicate();
		int arr[] = { 4, 2, 4, 5, 2, 3, 1, 3 };
		int arr_size = arr.length;

		duplicate.printRepeating(arr, arr_size);

		System.out.println("Duplicate Elements are...................");

		int[] numbers = { 1, 5, 23, 2, 1, 6, 3, 1, 8, 12, 3 };
		Arrays.sort(numbers);

		for (int i = 1; i < numbers.length; i++) {
			if (numbers[i] == numbers[i - 1]) {
				System.out.println("Duplicate: " + numbers[i]);
			}
		}
		int[] arrayOfInt = { 1, 2, 3, 5, 1, 2, 7, 8, 9, 10,2,8,18 };
		Set<Integer> notDupes = new HashSet<Integer>();
		Set<Integer> duplicates = new HashSet<Integer>();
		for (int i = 0; i < arrayOfInt.length; i++) {
			if (!notDupes.contains(arrayOfInt[i])) {
				notDupes.add(arrayOfInt[i]);
				continue;
			}
			duplicates.add(arrayOfInt[i]);
		}
		System.out.println("num of dups:" + duplicates.size());
		System.out.println("num of norls:" + notDupes.size());
	}
}

// This code has been contributed by Mayank Jaiswal
